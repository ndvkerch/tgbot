import logging
from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from database import get_spot_by_id
from services.weather import get_windy_forecast, wind_direction_to_text

logging.basicConfig(level=logging.INFO)
weather_router = Router()

class WeatherState(StatesGroup):
    selecting_spot = State()

@weather_router.callback_query(F.data == "weather")
async def request_weather(callback: types.CallbackQuery, state: FSMContext):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Å–ø–æ—Ç–∞ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã."""
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –≤–µ—Ç—Ä–∞:")
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º —Å–ø–æ—Ç–æ–≤, –∫–∞–∫ –≤ checkin.py
    # –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Å–ø–æ—Ç —É–∂–µ –≤—ã–±—Ä–∞–Ω –∏ –ø–µ—Ä–µ–¥–∞–Ω –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.set_state(WeatherState.selecting_spot)
    await callback.answer()

@weather_router.callback_query(F.data.startswith("spot_"), WeatherState.selecting_spot)
async def process_weather_request(callback: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–ø–æ—Ç–∞."""
    spot_id = int(callback.data.split("_")[1])
    spot = await get_spot_by_id(spot_id)
    
    if not spot:
        await callback.message.answer("‚ùå –°–ø–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await state.clear()
        await callback.answer()
        return
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤–µ—Ç—Ä–µ
    wind_data = await get_windy_forecast(spot["lat"], spot["lon"])
    if not wind_data:
        await callback.message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –≤–µ—Ç—Ä–µ.")
        await state.clear()
        await callback.answer()
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    wind_speed = wind_data["speed"]
    wind_direction = wind_data["direction"]
    direction_text = wind_direction_to_text(wind_direction)
    response = (
        f"üå¨ –ü—Ä–æ–≥–Ω–æ–∑ –≤–µ—Ç—Ä–∞ –¥–ª—è —Å–ø–æ—Ç–∞ '{spot['name']}':\n"
        f"–°–∫–æ—Ä–æ—Å—Ç—å: {wind_speed:.1f} –º/—Å\n"
        f"–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {direction_text} ({wind_direction:.0f}¬∞)"
    )
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]
        ]
    )
    await callback.message.answer(response, reply_markup=keyboard)
    await state.clear()
    await callback.answer()